# zsh prompt settings.

autoload -Uz vcs_info

HARD_RIGHT_ARROW=`echo "\u2b80"`
SOFT_RIGHT_ARROW=`echo "\u2b81"`
HARD_LEFT_ARROW=` echo "\u2b82"`
SOFT_LEFT_ARROW=` echo "\u2b83"`

# if not power lined fonts.
#HARD_RIGHT_ARROW=""
#SOFT_RIGHT_ARROW=""
#HARD_LEFT_ARROW=""
#SOFT_LEFT_ARROW=""


#print out left prompt
function left_prompt {
  sec=`date "+%s"`
  if [ `expr $sec % 2` -eq 1 ]; then
    COLOR_BG_LPROMPT=${COLOR_BG_LPROMPT1}
    COLOR_FG_LPROMPT=${COLOR_FG_LPROMPT1}
  else
    COLOR_BG_LPROMPT=${COLOR_BG_LPROMPT2}
    COLOR_FG_LPROMPT=${COLOR_FG_LPROMPT2}
  fi
  PROMPT_TEXT="> "

  # toggle arrow by vi INSERT/NORMAL mode
  case $KEYMAP in
    vicmd)
      PROMPT_TEXT="< "
    ;;
    main|viins)
      PROMPT_TEXT="> "
    ;;
  esac

  # vcs branch
  if [ -e ".git" ]; then
    VCS_TEXT="git"
    VCS_REMOTE_TEXT=`git config --list | grep "origin.url" | cut -d"=" -f 2`
    VCS_BRANCH_TEXT=`git branch | grep "\*" | sed "s/\* //"`
    VCS_TMUX_TEXT="\
#[bg=colour${COLOR_VCS_REMOTE}]\
${VCS_REMOTE_TEXT}\
#[fg=colour${COLOR_VCS_REMOTE},bg=colour${COLOR_VCS_BRANCH}]\
${HARD_RIGHT_ARROW}\
#[default,bg=colour${COLOR_VCS_BRANCH}]\
${VCS_BRANCH_TEXT}\
#[fg=colour${COLOR_VCS_BRANCH}]"
  else
    VCS_BRANCH=""
  fi

  # show user and hostname tmux status or zsh prompt
  if [ -n "$TMUX" ]; then
    HOSTNAME_TEXT=""
    HOSTNAME_TMUX_TEXT="\
#[bg=colour${COLOR_BG_LPROMPT}]\
${HARD_RIGHT_ARROW}\
#[default,fg=colour${COLOR_FG_LPROMPT},bg=colour${COLOR_BG_LPROMPT}]\
#(whoami)\
#[bold]\
${SOFT_RIGHT_ARROW}\
#[default,fg=colour${COLOR_FG_LPROMPT},bg=colour${COLOR_BG_LPROMPT}]\
#(hostname)\
#[bg=colour236,fg=colour${COLOR_BG_LPROMPT}]\
${HARD_RIGHT_ARROW}\
"
    tmux set -g status-left "${VCS_TMUX_TEXT}${HOSTNAME_TMUX_TEXT}" > /dev/null
  else
    HOSTNAME_TEXT="%n@%m "
  fi
  echo "%F{$COLOR_BG_LPROMPT}${HOSTNAME_TEXT}${PROMPT_TEXT}%f%F{$COLOR_MAIN}"
}


# print out right prompt
function right_prompt {
  PROMPT_TEXT="[zsh@%~]"

  # show NORMAL message if vi NORMAL mode.
  case $KEYMAP in
    vicmd)
      PROMPT_TEXT="--NORMAL--"
    ;;
    viins)
      PROMPT_TEXT="--INSERT--"
    ;;
  esac

  echo "${PROMPT_TEXT}"
}


# re eval prompt text
function zle-line-init zle-keymap-select {

  PROMPT="`left_prompt`"
  RPROMPT="`right_prompt`"

  zle reset-prompt
}


zle -N zle-line-init
zle -N zle-keymap-select

setopt print_exit_value
setopt prompt_subst

PROMPT="`left_prompt`"
RPROMPT="`right_prompt`"
SPROMPT="%F{$COLOR_BG_LPROMPT}%{$suggest%}(＠ﾟ△ﾟ%)ノ < もしかして %B%r%b かな? [そう!(y), 違う!(n),a,e] > "
